use Test;
use lib 'lib', 'examples';
use Cro::HTTP::RouterUtils;
use ExampleRoute;

my $app = route {
    include external => other-routes;
    get -> 'greet', Str :$name { 200 }
    get my sub greet-path('greet', $name) { "Hello, $name!" }
    get my sub ret('ret') { 42 }
    get my sub sum('sum', Int $a, Int $b) { $a + $b }
    get -> 'redir' { endpoints('greet-path').redirect-to: :name<zx> }
};

subtest 'auto-named endpoint' => {
    is endpoints('get_greet').path, '/greet', 'literal endpoint builds path';
};

subtest 'named endpoint with path parameter' => {
    my $ep = endpoints('greet-path');
    is $ep.path(:name<alice>), '/greet/alice', 'named path segment builds correctly';
    is $ep."hx-attrs"(:name<bob>), "hx-get='/greet/bob'", 'hx-attrs uses GET and built path';
    is $ep."hx-attrs"(
        :name<bob>,
        :trigger('click'), :target<#t>, :confirm('Are you sure?'), :indicator('#spin'),
        :oob, :boost,
        :push-url<true>, :replace-url('/next'), :select<#frag>, :select-oob<#frag2>,
        :swap('outerHTML settle:200ms'),
        :vals(q[{"extra":1}]), :headers(q[{"X-Test":"1"}]),
        :disable,
        :disabled-elt<#btn>, :disinherit<*>, :encoding<multipart/form-data>, :ext<some-ext>,
        :history<false>, :history-elt<#snap>,
        :include<#form>, :inherit<*>, :params<*>, :prompt<Type?>,
        :request(q[{"timeout":1000}]), :sync<this>, :validate,
        :vars(q[{"k":"v"}]),
    ),
        q{hx-get='/greet/bob' hx-trigger='click' hx-target='#t' hx-confirm='Are you sure?' hx-indicator='#spin' hx-swap-oob='true' hx-boost='true' hx-push-url='true' hx-replace-url='/next' hx-select='#frag' hx-select-oob='#frag2' hx-swap='outerHTML settle:200ms' hx-vals='{"extra":1}' hx-headers='{"X-Test":"1"}' hx-disable='true' hx-disabled-elt='#btn' hx-disinherit='*' hx-encoding='multipart/form-data' hx-ext='some-ext' hx-history='false' hx-history-elt='#snap' hx-include='#form' hx-inherit='*' hx-params='*' hx-prompt='Type?' hx-request='{"timeout":1000}' hx-sync='this' hx-validate='true' hx-vars='{"k":"v"}'}, # no hx-on test here
        'hx-attrs renders full attribute set';
};

subtest 'included routes' => {
    is endpoints('external-ep1').method, 'GET', 'included GET endpoint method';
    is endpoints('external-ep1').path, '/external/returns-ok', 'included endpoint path has prefix';
    is endpoints('external-ep2').method, 'POST', 'included POST endpoint method';
    is endpoints('external-ep2').path, '/external/using-post', 'included POST endpoint path has prefix';
};

subtest 'call() executes implementation' => {
    is endpoints('ret').call, 42, 'call returns value from implementation';
    is endpoints('sum').call(2, 3), 5, 'call passes positional args';
};

subtest 'typed parameter validation in path()' => {
    my $ep = endpoints('sum');
    is $ep.path(:a(1), :b(2)), '/sum/1/2', 'typed path with Ints works';
    throws-like { $ep.path(:a("x"), :b(2)) }, X::AdHoc, 'typed mismatch throws';
    throws-like { $ep.path(:a(1)) }, X::AdHoc, 'missing required parameter throws';
};

subtest 'nonexistent endpoint' => {
    throws-like { endpoints('no-such') }, X::AdHoc, 'missing endpoint throws';
};

use Cro::HTTP::Test;
my $app2 = route {
    get my sub greet-path('greet', $name) { 200 }
    get -> 'redir' { endpoints('greet-path').redirect-to: :name<ok> }
}
test-service $app2, {
    test get('/redir', :!follow), :status(307), :headers{ :Location</greet/ok> };
}

done-testing;
